# Multi-stage build for production optimization

# Stage 1: Build the React app
FROM node:22-alpine AS builder

WORKDIR /app

# Copy package files first (for better Docker layer caching)
COPY my-app/package.json ./

# Remove lock file and install dependencies (fixes version conflicts)
RUN npm install

# Copy source code
COPY my-app/ ./

# Build production React app (creates optimized bundle)
RUN npm run build

# Stage 2: Production server with nginx
FROM nginx:alpine

# Copy built React app to nginx document root
COPY --from=builder /app/build /usr/share/nginx/html

# Copy custom nginx config (optional)
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 80;
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files \$uri \$uri/ /index.html;
    }
}
EOF

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:80 || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]